version: '3.8'

services:
  # Main bioactivity ETL service
  bioactivity-etl:
    build:
      context: .
      target: development
    container_name: bioactivity-etl-dev
    volumes:
      - .:/app
      - /app/__pycache__
      - /app/.pytest_cache
      - /app/.mypy_cache
    environment:
      - PYTHONPATH=/app/src
      - BIOACTIVITY__HTTP__GLOBAL__TIMEOUT_SEC=30
      - BIOACTIVITY__RUNTIME__WORKERS=2
      - BIOACTIVITY__LOGGING__LEVEL=INFO
    env_file:
      - .env.local  # Optional local environment file
    working_dir: /app
    command: bash
    stdin_open: true
    tty: true
    networks:
      - bioactivity-network

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:1.50
    container_name: bioactivity-jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # Jaeger collector HTTP
      - "6831:6831/udp"  # Jaeger agent UDP
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - bioactivity-network

  # Prometheus for metrics (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: bioactivity-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - bioactivity-network

  # Grafana for dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: bioactivity-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - bioactivity-network

  # PostgreSQL for data storage (optional)
  postgres:
    image: postgres:15-alpine
    container_name: bioactivity-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=bioactivity
      - POSTGRES_USER=bioactivity
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - bioactivity-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: bioactivity-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - bioactivity-network

volumes:
  grafana-storage:
  postgres-data:
  redis-data:

networks:
  bioactivity-network:
    driver: bridge
