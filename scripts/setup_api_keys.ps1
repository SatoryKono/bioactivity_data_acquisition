# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ API –∫–ª—é—á–µ–π –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
# Setup script for API keys environment variables

param(
    [string]$SemanticScholarKey = "o2N1y1RHYU3aqEj556Oyv4oBzZrHthM2bWda2lf4",
    [string]$ChemblToken = "",
    [string]$CrossrefKey = "",
    [string]$OpenAlexKey = "",
    [string]$PubmedKey = "",
    [switch]$Persistent = $false,
    [switch]$ShowHelp = $false
)

if ($ShowHelp) {
    Write-Host @"
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ API –∫–ª—é—á–µ–π –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    .\scripts\setup_api_keys.ps1 [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]

–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    -SemanticScholarKey <key>  : API –∫–ª—é—á –¥–ª—è Semantic Scholar (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π)
    -ChemblToken <token>       : API —Ç–æ–∫–µ–Ω –¥–ª—è ChEMBL
    -CrossrefKey <key>         : API –∫–ª—é—á –¥–ª—è Crossref
    -OpenAlexKey <key>         : API –∫–ª—é—á –¥–ª—è OpenAlex
    -PubmedKey <key>           : API –∫–ª—é—á –¥–ª—è PubMed
    -Persistent                : –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ (—Ç—Ä–µ–±—É–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ PowerShell)
    -ShowHelp                  : –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ Semantic Scholar –∫–ª—é—á (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
    .\scripts\setup_api_keys.ps1

    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–ª—é—á–∏
    .\scripts\setup_api_keys.ps1 -ChemblToken "your_token" -CrossrefKey "your_key"

    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ
    .\scripts\setup_api_keys.ps1 -Persistent

    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π Semantic Scholar –∫–ª—é—á
    .\scripts\setup_api_keys.ps1 -SemanticScholarKey "your_custom_key"
"@
    exit 0
}

Write-Host "üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API –∫–ª—é—á–µ–π..." -ForegroundColor Green

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
function Set-EnvironmentVariable {
    param(
        [string]$Name,
        [string]$Value,
        [bool]$Persistent = $false
    )
    
    if ([string]::IsNullOrEmpty($Value)) {
        Write-Host "‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫ $Name (–∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ)" -ForegroundColor Yellow
        return
    }
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
    Set-Item -Path "env:$Name" -Value $Value
    Write-Host "‚úÖ $Name —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏" -ForegroundColor Green
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ (–µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–æ)
    if ($Persistent) {
        try {
            [Environment]::SetEnvironmentVariable($Name, $Value, "User")
            Write-Host "‚úÖ $Name —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å—Ç–æ—è–Ω–Ω–æ (—Ç—Ä–µ–±—É–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ PowerShell)" -ForegroundColor Green
        }
        catch {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ $Name –ø–æ—Å—Ç–æ—è–Ω–Ω–æ: $($_.Exception.Message)" -ForegroundColor Red
        }
    }
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ API –∫–ª—é—á–µ–π
Set-EnvironmentVariable -Name "SEMANTIC_SCHOLAR_API_KEY" -Value $SemanticScholarKey -Persistent $Persistent
Set-EnvironmentVariable -Name "CHEMBL_API_TOKEN" -Value $ChemblToken -Persistent $Persistent
Set-EnvironmentVariable -Name "CROSSREF_API_KEY" -Value $CrossrefKey -Persistent $Persistent
Set-EnvironmentVariable -Name "OPENALEX_API_KEY" -Value $OpenAlexKey -Persistent $Persistent
Set-EnvironmentVariable -Name "PUBMED_API_KEY" -Value $PubmedKey -Persistent $Persistent

Write-Host ""
Write-Host "üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:" -ForegroundColor Cyan

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
$envVars = @(
    "SEMANTIC_SCHOLAR_API_KEY",
    "CHEMBL_API_TOKEN", 
    "CROSSREF_API_KEY",
    "OPENALEX_API_KEY",
    "PUBMED_API_KEY"
)

foreach ($var in $envVars) {
    $value = [Environment]::GetEnvironmentVariable($var, "Process")
    if ($value) {
        $displayValue = if ($value.Length -gt 10) { $value.Substring(0, 10) + "..." } else { $value }
        Write-Host "  ‚úÖ $var = $displayValue" -ForegroundColor Green
    } else {
        Write-Host "  ‚ùå $var = –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Red
    }
}

Write-Host ""
Write-Host "üöÄ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã:" -ForegroundColor Green
Write-Host "   bioactivity-data-acquisition get-document-data --config configs\config_documents_full.yaml --limit 10" -ForegroundColor White

if ($Persistent) {
    Write-Host ""
    Write-Host "‚ö†Ô∏è  –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ PowerShell" -ForegroundColor Yellow
}
