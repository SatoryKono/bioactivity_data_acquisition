[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bioetl"
version = "1.0.0"
description = "Unified ETL framework for bioactivity data extraction"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "BioETL Team"}
]
keywords = ["bioactivity", "etl", "chembl", "data-extraction"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "pandas>=2.0.0",
    "pandera>=0.15.0",
    "requests>=2.31.0",
    "types-requests>=2.31.0",
    "structlog>=23.0.0",
    "typer>=0.9.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "types-PyYAML>=6.0.11",
    "tenacity>=8.2.0",
    "cachetools>=5.3.0",
    "click>=8.1.0",
    "pandas-stubs>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-httpserver>=1.0.6",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "pre-commit>=3.3.0",
    "types-requests>=2.31.0",
    "types-pyyaml>=6.0.11",
]

[project.scripts]
bioetl = "bioetl.cli.main:app"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.isort]
known-first-party = ["bioetl"]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true
strict_optional = true
strict_equality = true
mypy_path = ["stubs"]

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=src/bioetl",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=50",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "golden: Golden tests",
    "slow: Slow tests",
]

[tool.coverage.run]
source = ["src/bioetl"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

