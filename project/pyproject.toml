[build-system]
requires = ["hatchling>=1.18"]
build-backend = "hatchling.build"

[project]
name = "bioactivity-data-pipeline"
version = "0.1.0"
description = "ETL tooling for fetching bioactivity-related publications from multiple sources."
readme = "README.md"
requires-python = ">=3.10"
authors = [{name = "Bioactivity Data Team", email = "data@example.com"}]
license = {text = "MIT"}
keywords = ["etl", "bioactivity", "chembl", "openalex", "publications"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Bio-Informatics",
]
dependencies = [
  "backoff>=2.2",
  "pandas>=2.1",
  "pandera>=0.16",
  "pydantic>=2.6",
  "python-dotenv>=1.0",
  "PyYAML>=6.0",
  "requests>=2.31",
  "requests-cache>=1.1",
  "structlog>=24.1",
  "typer[all]>=0.9",
]

[project.optional-dependencies]
dev = [
  "mypy>=1.8",
  "pre-commit>=3.6",
  "pytest>=8.0",
  "pytest-cov>=4.1",
  "responses>=0.25",
  "ruff>=0.3",
  "types-PyYAML>=6.0.12",
  "types-requests>=2.31.0",
  "types-python-dateutil",
]

[project.scripts]
fetch-publications = "scripts.fetch_publications:app"

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q"
testpaths = ["tests"]
xfail_strict = true
filterwarnings = [
  "error::FutureWarning",
  "error::pandas.errors.PerformanceWarning",
]

[tool.mypy]
python_version = "3.10"
files = ["library", "scripts"]
strict = true
warn_unused_configs = true
warn_return_any = true
warn_unused_ignores = true
ignore_missing_imports = false

[tool.ruff]
line-length = 100
src = ["library", "scripts", "tests"]
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B", "N", "S", "C4", "T20"]
ignore = ["E501"]

[tool.ruff.format]
indent-style = "space"
quote-style = "double"

[tool.coverage.run]
branch = true
source = ["library", "scripts"]
omit = ["tests/*"]

[tool.coverage.report]
show_missing = true
skip_empty = true
