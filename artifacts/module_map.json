{
  "bioetl": {
    "imports": [],
    "module": "bioetl",
    "path": "src/bioetl/__init__.py"
  },
  "bioetl.adapters": {
    "imports": [
      "bioetl.adapters.base",
      "bioetl.adapters.base.ExternalAdapter",
      "bioetl.adapters.crossref",
      "bioetl.adapters.crossref.CrossrefAdapter",
      "bioetl.adapters.openalex",
      "bioetl.adapters.openalex.OpenAlexAdapter",
      "bioetl.adapters.pubchem",
      "bioetl.adapters.pubchem.PubChemAdapter",
      "bioetl.adapters.pubmed",
      "bioetl.adapters.pubmed.PubMedAdapter",
      "bioetl.adapters.semantic_scholar",
      "bioetl.adapters.semantic_scholar.SemanticScholarAdapter"
    ],
    "module": "bioetl.adapters",
    "path": "src/bioetl/adapters/__init__.py"
  },
  "bioetl.adapters.base": {
    "imports": [
      "abc",
      "abc.ABC",
      "abc.abstractmethod",
      "bioetl.core.api_client",
      "bioetl.core.api_client.APIConfig",
      "bioetl.core.api_client.UnifiedAPIClient",
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "collections.abc",
      "collections.abc.Callable",
      "collections.abc.Sequence",
      "dataclasses",
      "dataclasses.dataclass",
      "pandas",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.adapters.base",
    "path": "src/bioetl/adapters/base.py"
  },
  "bioetl.adapters.crossref": {
    "imports": [
      "bioetl.adapters.base",
      "bioetl.adapters.base.AdapterConfig",
      "bioetl.adapters.base.ExternalAdapter",
      "bioetl.core.api_client",
      "bioetl.core.api_client.APIConfig",
      "bioetl.normalizers",
      "bioetl.normalizers.bibliography",
      "bioetl.normalizers.bibliography.normalize_common_bibliography",
      "bioetl.normalizers.registry",
      "os",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.adapters.crossref",
    "path": "src/bioetl/adapters/crossref.py"
  },
  "bioetl.adapters.openalex": {
    "imports": [
      "bioetl.adapters.base",
      "bioetl.adapters.base.ExternalAdapter",
      "bioetl.normalizers",
      "bioetl.normalizers.bibliography",
      "bioetl.normalizers.bibliography.normalize_common_bibliography",
      "bioetl.normalizers.registry",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.adapters.openalex",
    "path": "src/bioetl/adapters/openalex.py"
  },
  "bioetl.adapters.pubchem": {
    "imports": [
      "bioetl.adapters.base",
      "bioetl.adapters.base.AdapterConfig",
      "bioetl.adapters.base.ExternalAdapter",
      "bioetl.core.api_client",
      "bioetl.core.api_client.APIConfig",
      "datetime",
      "datetime.datetime",
      "datetime.timezone",
      "json",
      "time",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.adapters.pubchem",
    "path": "src/bioetl/adapters/pubchem.py"
  },
  "bioetl.adapters.pubmed": {
    "imports": [
      "bioetl.adapters.base",
      "bioetl.adapters.base.AdapterConfig",
      "bioetl.adapters.base.ExternalAdapter",
      "bioetl.core.api_client",
      "bioetl.core.api_client.APIConfig",
      "bioetl.normalizers",
      "bioetl.normalizers.bibliography",
      "bioetl.normalizers.bibliography.normalize_common_bibliography",
      "bioetl.normalizers.registry",
      "os",
      "re",
      "typing",
      "typing.Any",
      "xml.etree",
      "xml.etree.ElementTree"
    ],
    "module": "bioetl.adapters.pubmed",
    "path": "src/bioetl/adapters/pubmed.py"
  },
  "bioetl.adapters.semantic_scholar": {
    "imports": [
      "bioetl.adapters.base",
      "bioetl.adapters.base.AdapterConfig",
      "bioetl.adapters.base.ExternalAdapter",
      "bioetl.core.api_client",
      "bioetl.core.api_client.APIConfig",
      "bioetl.normalizers",
      "bioetl.normalizers.bibliography",
      "bioetl.normalizers.bibliography.normalize_common_bibliography",
      "bioetl.normalizers.registry",
      "os",
      "pandas",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.adapters.semantic_scholar",
    "path": "src/bioetl/adapters/semantic_scholar.py"
  },
  "bioetl.cli": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.main",
      "bioetl.main.app",
      "typer",
      "typer.Typer",
      "typing",
      "typing.Any",
      "typing.TYPE_CHECKING"
    ],
    "module": "bioetl.cli",
    "path": "src/bioetl/cli/__init__.py"
  },
  "bioetl.cli.command": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.cli.limits",
      "bioetl.cli.limits.apply_sample_limit",
      "bioetl.config.loader",
      "bioetl.config.loader.load_config",
      "bioetl.config.loader.parse_cli_overrides",
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "bioetl.pipelines.base",
      "bioetl.pipelines.base.PipelineBase",
      "bioetl.utils.column_validator",
      "bioetl.utils.column_validator.ColumnValidator",
      "collections.abc",
      "collections.abc.Callable",
      "collections.abc.Sequence",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "typer"
    ],
    "module": "bioetl.cli.command",
    "path": "src/bioetl/cli/command.py"
  },
  "bioetl.cli.limits": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "bioetl.pipelines.base",
      "bioetl.pipelines.base.PipelineBase",
      "pandas",
      "types",
      "types.MethodType",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.cli.limits",
    "path": "src/bioetl/cli/limits.py"
  },
  "bioetl.cli.main": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "scripts",
      "scripts.PIPELINE_COMMAND_REGISTRY",
      "scripts.register_pipeline_command",
      "typer"
    ],
    "module": "bioetl.cli.main",
    "path": "src/bioetl/cli/main.py"
  },
  "bioetl.config": {
    "imports": [
      "bioetl.config.loader",
      "bioetl.config.loader.load_config",
      "bioetl.config.loader.parse_cli_overrides",
      "bioetl.config.models",
      "bioetl.config.models.PipelineConfig"
    ],
    "module": "bioetl.config",
    "path": "src/bioetl/config/__init__.py"
  },
  "bioetl.config.loader": {
    "imports": [
      "bioetl.config.models",
      "bioetl.config.models.PipelineConfig",
      "collections.abc",
      "collections.abc.Sequence",
      "json",
      "os",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.IO",
      "typing.TYPE_CHECKING",
      "yaml",
      "yaml.Node"
    ],
    "module": "bioetl.config.loader",
    "path": "src/bioetl/config/loader.py"
  },
  "bioetl.config.models": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.utils.column_validation",
      "bioetl.utils.column_validation.DEFAULT_COLUMN_VALIDATION_IGNORE_SUFFIXES",
      "bioetl.utils.column_validation.normalise_ignore_suffixes",
      "collections.abc",
      "collections.abc.Iterable",
      "hashlib",
      "json",
      "os",
      "pathlib",
      "pathlib.Path",
      "pydantic",
      "pydantic.BaseModel",
      "pydantic.ConfigDict",
      "pydantic.Field",
      "pydantic.PrivateAttr",
      "pydantic.field_validator",
      "pydantic.model_validator",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.config.models",
    "path": "src/bioetl/config/models.py"
  },
  "bioetl.core": {
    "imports": [
      "bioetl.core.api_client",
      "bioetl.core.api_client.APIConfig",
      "bioetl.core.api_client.UnifiedAPIClient",
      "bioetl.core.client_factory",
      "bioetl.core.client_factory.APIClientFactory",
      "bioetl.core.client_factory.ensure_target_source_config",
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "bioetl.core.output_writer",
      "bioetl.core.output_writer.OutputArtifacts",
      "bioetl.core.output_writer.OutputMetadata",
      "bioetl.core.output_writer.UnifiedOutputWriter"
    ],
    "module": "bioetl.core",
    "path": "src/bioetl/core/__init__.py"
  },
  "bioetl.core.api_client": {
    "imports": [
      "backoff",
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "cachetools",
      "cachetools.TTLCache",
      "collections.abc",
      "collections.abc.Callable",
      "collections.abc.Iterable",
      "collections.abc.Iterator",
      "collections.abc.Sequence",
      "copy",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "datetime",
      "datetime.datetime",
      "datetime.timezone",
      "email.utils",
      "email.utils.parsedate_to_datetime",
      "hashlib",
      "json",
      "random",
      "requests",
      "requests.exceptions",
      "requests.exceptions.HTTPError",
      "requests.exceptions.RequestException",
      "threading",
      "time",
      "typing",
      "typing.Any",
      "typing.TypeVar",
      "typing.cast"
    ],
    "module": "bioetl.core.api_client",
    "path": "src/bioetl/core/api_client.py"
  },
  "bioetl.core.client_factory": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.config.models",
      "bioetl.config.models.CacheConfig",
      "bioetl.config.models.CircuitBreakerConfig",
      "bioetl.config.models.FallbackOptions",
      "bioetl.config.models.HttpConfig",
      "bioetl.config.models.PipelineConfig",
      "bioetl.config.models.RateLimitConfig",
      "bioetl.config.models.RetryConfig",
      "bioetl.config.models.TargetSourceConfig",
      "bioetl.core.api_client",
      "bioetl.core.api_client.APIConfig",
      "collections.abc",
      "collections.abc.Mapping",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.core.client_factory",
    "path": "src/bioetl/core/client_factory.py"
  },
  "bioetl.core.hashing": {
    "imports": [
      "hashlib",
      "json",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.core.hashing",
    "path": "src/bioetl/core/hashing.py"
  },
  "bioetl.core.logger": {
    "imports": [
      "collections.abc",
      "collections.abc.Callable",
      "contextvars",
      "contextvars.ContextVar",
      "dataclasses",
      "dataclasses.dataclass",
      "datetime",
      "datetime.datetime",
      "datetime.timezone",
      "logging",
      "logging.handlers",
      "logging.handlers.RotatingFileHandler",
      "pathlib",
      "pathlib.Path",
      "re",
      "structlog",
      "typing",
      "typing.Any",
      "typing.cast"
    ],
    "module": "bioetl.core.logger",
    "path": "src/bioetl/core/logger.py"
  },
  "bioetl.core.materialization": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.config.models",
      "bioetl.config.models.MaterializationPaths",
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "bioetl.core.output_writer",
      "bioetl.core.output_writer.OutputMetadata",
      "bioetl.core.output_writer.UnifiedOutputWriter",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.Callable",
      "typing.MutableMapping"
    ],
    "module": "bioetl.core.materialization",
    "path": "src/bioetl/core/materialization.py"
  },
  "bioetl.core.output_writer": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.config",
      "bioetl.config.PipelineConfig",
      "bioetl.config.models",
      "bioetl.config.models.DeterminismConfig",
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "bioetl.schemas.base",
      "bioetl.schemas.base.BaseSchema",
      "bioetl.schemas.registry",
      "bioetl.schemas.registry.SchemaRegistry",
      "collections.abc",
      "collections.abc.Callable",
      "collections.abc.Sequence",
      "contextvars",
      "contextvars.ContextVar",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "dataclasses.replace",
      "datetime",
      "datetime.datetime",
      "datetime.timezone",
      "hashlib",
      "json",
      "os",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.TYPE_CHECKING",
      "yaml"
    ],
    "module": "bioetl.core.output_writer",
    "path": "src/bioetl/core/output_writer.py"
  },
  "bioetl.normalizers": {
    "imports": [
      "bioetl.normalizers.base",
      "bioetl.normalizers.base.BaseNormalizer",
      "bioetl.normalizers.bibliography",
      "bioetl.normalizers.bibliography.normalize_authors",
      "bioetl.normalizers.bibliography.normalize_doi",
      "bioetl.normalizers.bibliography.normalize_title",
      "bioetl.normalizers.chemistry",
      "bioetl.normalizers.chemistry.BaoIdNormalizer",
      "bioetl.normalizers.chemistry.ChemblIdNormalizer",
      "bioetl.normalizers.chemistry.ChemistryNormalizer",
      "bioetl.normalizers.chemistry.ChemistryRelationNormalizer",
      "bioetl.normalizers.chemistry.ChemistryStringNormalizer",
      "bioetl.normalizers.chemistry.ChemistryUnitsNormalizer",
      "bioetl.normalizers.chemistry.LigandEfficiencyNormalizer",
      "bioetl.normalizers.chemistry.NonNegativeFloatNormalizer",
      "bioetl.normalizers.chemistry.TargetOrganismNormalizer",
      "bioetl.normalizers.identifier",
      "bioetl.normalizers.identifier.IdentifierNormalizer",
      "bioetl.normalizers.numeric",
      "bioetl.normalizers.numeric.BooleanNormalizer",
      "bioetl.normalizers.numeric.NumericNormalizer",
      "bioetl.normalizers.registry",
      "bioetl.normalizers.registry.NormalizerRegistry",
      "bioetl.normalizers.registry.registry",
      "bioetl.normalizers.string",
      "bioetl.normalizers.string.StringNormalizer"
    ],
    "module": "bioetl.normalizers",
    "path": "src/bioetl/normalizers/__init__.py"
  },
  "bioetl.normalizers.base": {
    "imports": [
      "abc",
      "abc.ABC",
      "abc.abstractmethod",
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.normalizers.base",
    "path": "src/bioetl/normalizers/base.py"
  },
  "bioetl.normalizers.bibliography": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.normalizers.registry",
      "bioetl.normalizers.registry.registry",
      "collections.abc",
      "collections.abc.Callable",
      "collections.abc.Iterable",
      "collections.abc.Mapping",
      "re",
      "typing",
      "typing.Any",
      "typing.TypedDict",
      "typing.cast"
    ],
    "module": "bioetl.normalizers.bibliography",
    "path": "src/bioetl/normalizers/bibliography.py"
  },
  "bioetl.normalizers.chemistry": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "bioetl.normalizers.base",
      "bioetl.normalizers.base.BaseNormalizer",
      "bioetl.normalizers.constants",
      "bioetl.normalizers.constants.RELATION_ALIASES",
      "bioetl.normalizers.constants.UNIT_SYNONYMS",
      "bioetl.normalizers.helpers",
      "bioetl.normalizers.helpers._is_na",
      "bioetl.normalizers.numeric",
      "bioetl.normalizers.numeric.NumericNormalizer",
      "re",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.normalizers.chemistry",
    "path": "src/bioetl/normalizers/chemistry.py"
  },
  "bioetl.normalizers.constants": {
    "imports": [],
    "module": "bioetl.normalizers.constants",
    "path": "src/bioetl/normalizers/constants.py"
  },
  "bioetl.normalizers.helpers": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.normalizers.constants",
      "bioetl.normalizers.constants.NA_STRINGS",
      "math",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.normalizers.helpers",
    "path": "src/bioetl/normalizers/helpers.py"
  },
  "bioetl.normalizers.identifier": {
    "imports": [
      "bioetl.normalizers.base",
      "bioetl.normalizers.base.BaseNormalizer",
      "re",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.normalizers.identifier",
    "path": "src/bioetl/normalizers/identifier.py"
  },
  "bioetl.normalizers.numeric": {
    "imports": [
      "bioetl.normalizers.base",
      "bioetl.normalizers.base.BaseNormalizer",
      "bioetl.normalizers.constants",
      "bioetl.normalizers.constants.BOOLEAN_FALSE",
      "bioetl.normalizers.constants.BOOLEAN_TRUE",
      "bioetl.normalizers.helpers",
      "bioetl.normalizers.helpers._is_na",
      "math",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.normalizers.numeric",
    "path": "src/bioetl/normalizers/numeric.py"
  },
  "bioetl.normalizers.registry": {
    "imports": [
      "bioetl.normalizers.base",
      "bioetl.normalizers.base.BaseNormalizer",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.normalizers.registry",
    "path": "src/bioetl/normalizers/registry.py"
  },
  "bioetl.normalizers.string": {
    "imports": [
      "bioetl.normalizers.base",
      "bioetl.normalizers.base.BaseNormalizer",
      "re",
      "typing",
      "typing.Any",
      "unicodedata"
    ],
    "module": "bioetl.normalizers.string",
    "path": "src/bioetl/normalizers/string.py"
  },
  "bioetl.pandera_pandas": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.pandera_typing",
      "bioetl.pandera_typing.Series",
      "collections.abc",
      "collections.abc.Mapping",
      "pandera.pandas",
      "typing",
      "typing.Any",
      "typing.Protocol",
      "typing.cast"
    ],
    "module": "bioetl.pandera_pandas",
    "path": "src/bioetl/pandera_pandas.py"
  },
  "bioetl.pandera_typing": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "importlib",
      "importlib.import_module",
      "typing",
      "typing.Any",
      "typing.cast"
    ],
    "module": "bioetl.pandera_typing",
    "path": "src/bioetl/pandera_typing.py"
  },
  "bioetl.pipelines": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.pipelines.activity",
      "bioetl.pipelines.activity.ActivityPipeline",
      "bioetl.pipelines.assay",
      "bioetl.pipelines.assay.AssayPipeline",
      "bioetl.pipelines.base",
      "bioetl.pipelines.base.PipelineBase",
      "bioetl.pipelines.document",
      "bioetl.pipelines.document.DocumentPipeline",
      "bioetl.pipelines.target",
      "bioetl.pipelines.target.TargetPipeline",
      "bioetl.pipelines.testitem",
      "bioetl.pipelines.testitem.TestItemPipeline",
      "importlib",
      "importlib.import_module",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.TYPE_CHECKING"
    ],
    "module": "bioetl.pipelines",
    "path": "src/bioetl/pipelines/__init__.py"
  },
  "bioetl.pipelines.activity": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.config",
      "bioetl.config.PipelineConfig",
      "bioetl.core.api_client",
      "bioetl.core.api_client.CircuitBreakerOpenError",
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "bioetl.normalizers",
      "bioetl.normalizers.registry",
      "bioetl.pipelines.base",
      "bioetl.pipelines.base.PipelineBase",
      "bioetl.schemas",
      "bioetl.schemas.ActivitySchema",
      "bioetl.schemas.registry",
      "bioetl.schemas.registry.schema_registry",
      "bioetl.utils.dataframe",
      "bioetl.utils.dataframe.resolve_schema_column_order",
      "bioetl.utils.dtypes",
      "bioetl.utils.dtypes.coerce_nullable_float",
      "bioetl.utils.dtypes.coerce_nullable_int",
      "bioetl.utils.dtypes.coerce_retry_after",
      "bioetl.utils.fallback",
      "bioetl.utils.fallback.FallbackRecordBuilder",
      "bioetl.utils.fallback.build_fallback_payload",
      "bioetl.utils.json",
      "bioetl.utils.json.normalize_json_list",
      "bioetl.utils.output",
      "bioetl.utils.output.finalize_output_dataset",
      "bioetl.utils.qc",
      "bioetl.utils.qc.register_fallback_statistics",
      "collections.abc",
      "collections.abc.Iterable",
      "collections.abc.Mapping",
      "collections.abc.Sequence",
      "datetime",
      "datetime.datetime",
      "datetime.timezone",
      "functools",
      "functools.lru_cache",
      "hashlib",
      "json",
      "numpy",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any",
      "typing.cast",
      "urllib.parse",
      "urllib.parse.urlencode"
    ],
    "module": "bioetl.pipelines.activity",
    "path": "src/bioetl/pipelines/activity.py"
  },
  "bioetl.pipelines.assay": {
    "imports": [
      "bioetl.config",
      "bioetl.config.PipelineConfig",
      "bioetl.core.api_client",
      "bioetl.core.api_client.CircuitBreakerOpenError",
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "bioetl.normalizers",
      "bioetl.normalizers.registry",
      "bioetl.pipelines.base",
      "bioetl.pipelines.base.PipelineBase",
      "bioetl.schemas",
      "bioetl.schemas.AssaySchema",
      "bioetl.schemas.assay",
      "bioetl.schemas.assay.AssaySchema",
      "bioetl.schemas.registry",
      "bioetl.schemas.registry.schema_registry",
      "bioetl.utils.dataframe",
      "bioetl.utils.dataframe.resolve_schema_column_order",
      "bioetl.utils.dtypes",
      "bioetl.utils.dtypes.coerce_nullable_int",
      "bioetl.utils.dtypes.coerce_retry_after",
      "bioetl.utils.fallback",
      "bioetl.utils.fallback.FallbackRecordBuilder",
      "bioetl.utils.fallback.build_fallback_payload",
      "bioetl.utils.output",
      "bioetl.utils.output.finalize_output_dataset",
      "collections",
      "collections.Counter",
      "collections.abc",
      "collections.abc.Iterable",
      "collections.abc.Sequence",
      "datetime",
      "datetime.datetime",
      "datetime.timezone",
      "json",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "requests",
      "subprocess",
      "typing",
      "typing.Any",
      "urllib.parse",
      "urllib.parse.urlencode"
    ],
    "module": "bioetl.pipelines.assay",
    "path": "src/bioetl/pipelines/assay.py"
  },
  "bioetl.pipelines.base": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "abc",
      "abc.ABC",
      "abc.abstractmethod",
      "bioetl.config",
      "bioetl.config.PipelineConfig",
      "bioetl.config.models",
      "bioetl.config.models.TargetSourceConfig",
      "bioetl.core.api_client",
      "bioetl.core.api_client.UnifiedAPIClient",
      "bioetl.core.client_factory",
      "bioetl.core.client_factory.APIClientFactory",
      "bioetl.core.client_factory.ensure_target_source_config",
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "bioetl.core.output_writer",
      "bioetl.core.output_writer.AdditionalTableSpec",
      "bioetl.core.output_writer.OutputArtifacts",
      "bioetl.core.output_writer.OutputMetadata",
      "bioetl.core.output_writer.UnifiedOutputWriter",
      "bioetl.utils.chembl",
      "bioetl.utils.chembl.ChemblRelease",
      "bioetl.utils.chembl.SupportsRequestJson",
      "bioetl.utils.chembl.fetch_chembl_release",
      "bioetl.utils.io",
      "bioetl.utils.io.load_input_frame",
      "bioetl.utils.io.resolve_input_path",
      "bioetl.utils.qc",
      "bioetl.utils.qc.update_summary_metrics",
      "bioetl.utils.qc.update_summary_section",
      "bioetl.utils.qc.update_validation_issue_summary",
      "bioetl.utils.validation",
      "bioetl.utils.validation._summarize_schema_errors",
      "collections.abc",
      "collections.abc.Callable",
      "collections.abc.Iterable",
      "collections.abc.Mapping",
      "collections.abc.Sequence",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.replace",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.pipelines.base",
    "path": "src/bioetl/pipelines/base.py"
  },
  "bioetl.pipelines.document": {
    "imports": [
      "bioetl.adapters",
      "bioetl.adapters.CrossrefAdapter",
      "bioetl.adapters.OpenAlexAdapter",
      "bioetl.adapters.PubMedAdapter",
      "bioetl.adapters.SemanticScholarAdapter",
      "bioetl.adapters.base",
      "bioetl.adapters.base.AdapterConfig",
      "bioetl.config",
      "bioetl.config.PipelineConfig",
      "bioetl.core.api_client",
      "bioetl.core.api_client.APIConfig",
      "bioetl.core.api_client.CircuitBreakerOpenError",
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "bioetl.normalizers",
      "bioetl.normalizers.registry",
      "bioetl.pipelines.base",
      "bioetl.pipelines.base.EnrichmentStage",
      "bioetl.pipelines.base.PipelineBase",
      "bioetl.pipelines.base.enrichment_stage_registry",
      "bioetl.pipelines.document_enrichment",
      "bioetl.pipelines.document_enrichment.merge_with_precedence",
      "bioetl.schemas.document",
      "bioetl.schemas.document.DocumentNormalizedSchema",
      "bioetl.schemas.document.DocumentRawSchema",
      "bioetl.schemas.document.DocumentSchema",
      "bioetl.schemas.document_input",
      "bioetl.schemas.document_input.DocumentInputSchema",
      "bioetl.schemas.registry",
      "bioetl.schemas.registry.schema_registry",
      "bioetl.utils.dtypes",
      "bioetl.utils.dtypes.coerce_optional_bool",
      "bioetl.utils.dtypes.coerce_retry_after",
      "bioetl.utils.fallback",
      "bioetl.utils.fallback.build_fallback_payload",
      "bioetl.utils.output",
      "bioetl.utils.output.finalize_output_dataset",
      "bioetl.utils.qc",
      "bioetl.utils.qc.compute_field_coverage",
      "bioetl.utils.qc.duplicate_summary",
      "collections.abc",
      "collections.abc.Callable",
      "collections.abc.Iterable",
      "collections.abc.Mapping",
      "collections.abc.Sequence",
      "concurrent.futures",
      "concurrent.futures.ThreadPoolExecutor",
      "copy",
      "copy.deepcopy",
      "dataclasses",
      "dataclasses.dataclass",
      "os",
      "pandas",
      "pandera.errors",
      "pandera.errors.SchemaErrors",
      "pathlib",
      "pathlib.Path",
      "re",
      "requests",
      "typing",
      "typing.Any",
      "urllib.parse",
      "urllib.parse.urlencode"
    ],
    "module": "bioetl.pipelines.document",
    "path": "src/bioetl/pipelines/document.py"
  },
  "bioetl.pipelines.document_enrichment": {
    "imports": [
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "collections.abc",
      "collections.abc.Callable",
      "pandas"
    ],
    "module": "bioetl.pipelines.document_enrichment",
    "path": "src/bioetl/pipelines/document_enrichment.py"
  },
  "bioetl.pipelines.target": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.config",
      "bioetl.config.PipelineConfig",
      "bioetl.config.models",
      "bioetl.config.models.TargetSourceConfig",
      "bioetl.core.api_client",
      "bioetl.core.api_client.UnifiedAPIClient",
      "bioetl.core.client_factory",
      "bioetl.core.client_factory.APIClientFactory",
      "bioetl.core.client_factory.ensure_target_source_config",
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "bioetl.core.materialization",
      "bioetl.core.materialization.MaterializationManager",
      "bioetl.core.output_writer",
      "bioetl.core.output_writer.UnifiedOutputWriter",
      "bioetl.normalizers",
      "bioetl.normalizers.registry",
      "bioetl.pipelines.base",
      "bioetl.pipelines.base.EnrichmentStage",
      "bioetl.pipelines.base.PipelineBase",
      "bioetl.pipelines.base.create_chembl_client",
      "bioetl.pipelines.base.enrichment_stage_registry",
      "bioetl.pipelines.target_gold",
      "bioetl.pipelines.target_gold._split_accession_field",
      "bioetl.pipelines.target_gold.annotate_source_rank",
      "bioetl.pipelines.target_gold.coalesce_by_priority",
      "bioetl.pipelines.target_gold.expand_xrefs",
      "bioetl.pipelines.target_gold.merge_components",
      "bioetl.schemas",
      "bioetl.schemas.ProteinClassSchema",
      "bioetl.schemas.TargetComponentSchema",
      "bioetl.schemas.TargetSchema",
      "bioetl.schemas.XrefSchema",
      "bioetl.schemas.registry",
      "bioetl.schemas.registry.schema_registry",
      "bioetl.utils.output",
      "bioetl.utils.output.finalize_output_dataset",
      "bioetl.utils.qc",
      "bioetl.utils.qc.prepare_enrichment_metrics",
      "bioetl.utils.qc.prepare_missing_mappings",
      "bioetl.utils.qc.update_summary_metrics",
      "bioetl.utils.qc.update_summary_section",
      "bioetl.utils.qc.update_validation_issue_summary",
      "collections",
      "collections.abc",
      "collections.abc.Iterable",
      "collections.abc.Iterator",
      "collections.defaultdict",
      "json",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "re",
      "time",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.pipelines.target",
    "path": "src/bioetl/pipelines/target.py"
  },
  "bioetl.pipelines.target_gold": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.config.models",
      "bioetl.config.models.MaterializationPaths",
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "bioetl.core.materialization",
      "bioetl.core.materialization.MaterializationManager",
      "collections.abc",
      "collections.abc.Iterator",
      "collections.abc.Mapping",
      "collections.abc.Sequence",
      "dataclasses",
      "dataclasses.dataclass",
      "json",
      "numpy",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.pipelines.target_gold",
    "path": "src/bioetl/pipelines/target_gold.py"
  },
  "bioetl.pipelines.testitem": {
    "imports": [
      "bioetl.adapters",
      "bioetl.adapters.PubChemAdapter",
      "bioetl.adapters.base",
      "bioetl.adapters.base.AdapterConfig",
      "bioetl.adapters.base.ExternalAdapter",
      "bioetl.config",
      "bioetl.config.PipelineConfig",
      "bioetl.core.api_client",
      "bioetl.core.api_client.APIConfig",
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "bioetl.normalizers",
      "bioetl.normalizers.registry",
      "bioetl.pipelines.base",
      "bioetl.pipelines.base.PipelineBase",
      "bioetl.schemas",
      "bioetl.schemas.TestItemSchema",
      "bioetl.schemas.registry",
      "bioetl.schemas.registry.schema_registry",
      "bioetl.utils.chembl",
      "bioetl.utils.chembl.SupportsRequestJson",
      "bioetl.utils.dtypes",
      "bioetl.utils.dtypes.coerce_nullable_int",
      "bioetl.utils.dtypes.coerce_optional_bool",
      "bioetl.utils.dtypes.coerce_retry_after",
      "bioetl.utils.fallback",
      "bioetl.utils.fallback.FallbackRecordBuilder",
      "bioetl.utils.fallback.build_fallback_payload",
      "bioetl.utils.json",
      "bioetl.utils.json.canonical_json",
      "bioetl.utils.output",
      "bioetl.utils.output.finalize_output_dataset",
      "bioetl.utils.qc",
      "bioetl.utils.qc.duplicate_summary",
      "bioetl.utils.qc.update_summary_metrics",
      "bioetl.utils.qc.update_summary_section",
      "bioetl.utils.qc.update_validation_issue_summary",
      "collections.abc",
      "collections.abc.Sequence",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "re",
      "requests",
      "typing",
      "typing.Any",
      "typing.cast",
      "urllib.parse",
      "urllib.parse.urlencode"
    ],
    "module": "bioetl.pipelines.testitem",
    "path": "src/bioetl/pipelines/testitem.py"
  },
  "bioetl.schemas": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.schemas.activity",
      "bioetl.schemas.activity.ActivitySchema",
      "bioetl.schemas.assay",
      "bioetl.schemas.assay.AssaySchema",
      "bioetl.schemas.base",
      "bioetl.schemas.base.BaseSchema",
      "bioetl.schemas.document",
      "bioetl.schemas.document.DocumentNormalizedSchema",
      "bioetl.schemas.document.DocumentRawSchema",
      "bioetl.schemas.document.DocumentSchema",
      "bioetl.schemas.document_input",
      "bioetl.schemas.document_input.DocumentInputSchema",
      "bioetl.schemas.registry",
      "bioetl.schemas.registry.SchemaRegistry",
      "bioetl.schemas.registry.schema_registry",
      "bioetl.schemas.target",
      "bioetl.schemas.target.ProteinClassSchema",
      "bioetl.schemas.target.TargetComponentSchema",
      "bioetl.schemas.target.TargetSchema",
      "bioetl.schemas.target.XrefSchema",
      "bioetl.schemas.testitem",
      "bioetl.schemas.testitem.TestItemSchema",
      "importlib",
      "importlib.import_module",
      "typing",
      "typing.Any",
      "typing.Dict",
      "typing.TYPE_CHECKING"
    ],
    "module": "bioetl.schemas",
    "path": "src/bioetl/schemas/__init__.py"
  },
  "bioetl.schemas.activity": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.pandera_pandas",
      "bioetl.pandera_pandas.pa",
      "bioetl.pandera_typing",
      "bioetl.pandera_typing.Series",
      "bioetl.schemas.base",
      "bioetl.schemas.base.BaseSchema",
      "bioetl.schemas.base.FALLBACK_METADATA_COLUMN_ORDER",
      "bioetl.schemas.base.FallbackMetadataMixin",
      "pandas"
    ],
    "module": "bioetl.schemas.activity",
    "path": "src/bioetl/schemas/activity.py"
  },
  "bioetl.schemas.assay": {
    "imports": [
      "bioetl.pandera_pandas",
      "bioetl.pandera_pandas.pa",
      "bioetl.pandera_typing",
      "bioetl.pandera_typing.Series",
      "bioetl.schemas.base",
      "bioetl.schemas.base.BaseSchema",
      "bioetl.schemas.base.FALLBACK_METADATA_COLUMN_ORDER",
      "bioetl.schemas.base.FallbackMetadataMixin",
      "bioetl.schemas.base.expose_config_column_order",
      "pandas"
    ],
    "module": "bioetl.schemas.assay",
    "path": "src/bioetl/schemas/assay.py"
  },
  "bioetl.schemas.base": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.pandera_pandas",
      "bioetl.pandera_pandas.DataFrameModel",
      "bioetl.pandera_pandas.Field",
      "bioetl.pandera_typing",
      "bioetl.pandera_typing.DataFrame",
      "bioetl.pandera_typing.Series",
      "pandas",
      "typing",
      "typing.Any",
      "typing.Protocol",
      "typing.TypedDict",
      "typing.cast"
    ],
    "module": "bioetl.schemas.base",
    "path": "src/bioetl/schemas/base.py"
  },
  "bioetl.schemas.document": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.pandera_pandas",
      "bioetl.pandera_pandas.DataFrameModel",
      "bioetl.pandera_pandas.Field",
      "bioetl.pandera_typing",
      "bioetl.pandera_typing.Series",
      "bioetl.schemas.base",
      "bioetl.schemas.base.BaseSchema",
      "bioetl.schemas.base.FALLBACK_METADATA_COLUMN_ORDER",
      "bioetl.schemas.base.FallbackMetadataMixin",
      "bioetl.schemas.base.expose_config_column_order",
      "collections.abc",
      "collections.abc.Mapping",
      "pandas",
      "typing",
      "typing.Any",
      "typing.Protocol",
      "typing.TYPE_CHECKING",
      "typing.cast"
    ],
    "module": "bioetl.schemas.document",
    "path": "src/bioetl/schemas/document.py"
  },
  "bioetl.schemas.document_input": {
    "imports": [
      "bioetl.pandera_pandas",
      "bioetl.pandera_pandas.pa",
      "bioetl.pandera_typing",
      "bioetl.pandera_typing.Series"
    ],
    "module": "bioetl.schemas.document_input",
    "path": "src/bioetl/schemas/document_input.py"
  },
  "bioetl.schemas.registry": {
    "imports": [
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "bioetl.pandera_pandas",
      "bioetl.pandera_pandas.DataFrameModel",
      "bioetl.utils.dataframe",
      "bioetl.utils.dataframe.resolve_schema_column_order",
      "dataclasses",
      "dataclasses.dataclass",
      "packaging",
      "packaging.version",
      "re"
    ],
    "module": "bioetl.schemas.registry",
    "path": "src/bioetl/schemas/registry.py"
  },
  "bioetl.schemas.target": {
    "imports": [
      "bioetl.pandera_pandas",
      "bioetl.pandera_pandas.pa",
      "bioetl.pandera_typing",
      "bioetl.pandera_typing.Series",
      "bioetl.schemas.base",
      "bioetl.schemas.base.BaseSchema",
      "pandas"
    ],
    "module": "bioetl.schemas.target",
    "path": "src/bioetl/schemas/target.py"
  },
  "bioetl.schemas.testitem": {
    "imports": [
      "bioetl.pandera_pandas",
      "bioetl.pandera_pandas.pa",
      "bioetl.pandera_typing",
      "bioetl.pandera_typing.Series",
      "bioetl.schemas.base",
      "bioetl.schemas.base.BaseSchema",
      "bioetl.schemas.base.FALLBACK_METADATA_COLUMN_ORDER",
      "bioetl.schemas.base.FallbackMetadataMixin",
      "pandas"
    ],
    "module": "bioetl.schemas.testitem",
    "path": "src/bioetl/schemas/testitem.py"
  },
  "bioetl.utils": {
    "imports": [
      "bioetl.utils",
      "bioetl.utils.dataframe",
      "bioetl.utils.io",
      "bioetl.utils.output"
    ],
    "module": "bioetl.utils",
    "path": "src/bioetl/utils/__init__.py"
  },
  "bioetl.utils.chembl": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "collections.abc",
      "collections.abc.Mapping",
      "dataclasses",
      "dataclasses.dataclass",
      "requests",
      "typing",
      "typing.Any",
      "typing.Protocol",
      "urllib.parse",
      "urllib.parse.urljoin"
    ],
    "module": "bioetl.utils.chembl",
    "path": "src/bioetl/utils/chembl.py"
  },
  "bioetl.utils.column_validation": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "collections.abc",
      "collections.abc.Iterable"
    ],
    "module": "bioetl.utils.column_validation",
    "path": "src/bioetl/utils/column_validation.py"
  },
  "bioetl.utils.column_validator": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "bioetl.pandera_pandas",
      "bioetl.pandera_pandas.pa",
      "bioetl.schemas.registry",
      "bioetl.schemas.registry.SchemaRegistry",
      "bioetl.utils.column_validation",
      "bioetl.utils.column_validation.DEFAULT_COLUMN_VALIDATION_IGNORE_SUFFIXES",
      "bioetl.utils.column_validation.normalise_ignore_suffixes",
      "bioetl.utils.dataframe",
      "bioetl.utils.dataframe.resolve_schema_column_order",
      "collections",
      "collections.Counter",
      "collections.abc",
      "collections.abc.Iterable",
      "json",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.utils.column_validator",
    "path": "src/bioetl/utils/column_validator.py"
  },
  "bioetl.utils.dataframe": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.core.hashing",
      "bioetl.core.hashing.generate_hash_business_key",
      "bioetl.schemas.base",
      "bioetl.schemas.base.BaseSchema",
      "collections.abc",
      "collections.abc.Iterable",
      "collections.abc.Mapping",
      "collections.abc.Sequence",
      "datetime",
      "datetime.datetime",
      "datetime.timezone",
      "hashlib",
      "numpy",
      "pandas",
      "pandas.util",
      "pandas.util.hash_pandas_object",
      "typing",
      "typing.Any",
      "typing.TypeVar",
      "typing.cast"
    ],
    "module": "bioetl.utils.dataframe",
    "path": "src/bioetl/utils/dataframe.py"
  },
  "bioetl.utils.dtype": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.utils.dtypes",
      "bioetl.utils.dtypes.coerce_nullable_float_columns",
      "bioetl.utils.dtypes.coerce_nullable_int_columns",
      "bioetl.utils.dtypes.coerce_optional_bool"
    ],
    "module": "bioetl.utils.dtype",
    "path": "src/bioetl/utils/dtype.py"
  },
  "bioetl.utils.dtypes": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "collections.abc",
      "collections.abc.Mapping",
      "collections.abc.Sequence",
      "numpy",
      "pandas",
      "pandas._libs.missing",
      "pandas._libs.missing.NAType",
      "typing",
      "typing.Any",
      "typing.TYPE_CHECKING",
      "typing.TypeAlias",
      "typing.cast"
    ],
    "module": "bioetl.utils.dtypes",
    "path": "src/bioetl/utils/dtypes.py"
  },
  "bioetl.utils.fallback": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.core.api_client",
      "bioetl.core.api_client.parse_retry_after",
      "bioetl.utils.dtypes",
      "bioetl.utils.dtypes.coerce_retry_after",
      "collections.abc",
      "collections.abc.Mapping",
      "collections.abc.Sequence",
      "datetime",
      "datetime.datetime",
      "datetime.timezone",
      "pandas",
      "types",
      "types.MappingProxyType",
      "typing",
      "typing.Any",
      "warnings",
      "warnings.warn"
    ],
    "module": "bioetl.utils.fallback",
    "path": "src/bioetl/utils/fallback.py"
  },
  "bioetl.utils.io": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.config",
      "bioetl.config.PipelineConfig",
      "collections.abc",
      "collections.abc.Sequence",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.utils.io",
    "path": "src/bioetl/utils/io.py"
  },
  "bioetl.utils.json": {
    "imports": [
      "bioetl.normalizers.constants",
      "bioetl.normalizers.constants.NA_STRINGS",
      "bioetl.normalizers.helpers",
      "bioetl.normalizers.helpers._is_na",
      "collections.abc",
      "collections.abc.Callable",
      "json",
      "math",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.utils.json",
    "path": "src/bioetl/utils/json.py"
  },
  "bioetl.utils.output": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.schemas.base",
      "bioetl.schemas.base.BaseSchema",
      "bioetl.utils.dataframe",
      "bioetl.utils.dataframe.finalize_pipeline_output",
      "collections.abc",
      "collections.abc.Mapping",
      "collections.abc.Sequence",
      "pandas",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.utils.output",
    "path": "src/bioetl/utils/output.py"
  },
  "bioetl.utils.qc": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.utils.dtypes",
      "bioetl.utils.dtypes.coerce_retry_after",
      "collections",
      "collections.Counter",
      "collections.abc",
      "collections.abc.Mapping",
      "collections.abc.Sequence",
      "numpy",
      "pandas",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.utils.qc",
    "path": "src/bioetl/utils/qc.py"
  },
  "bioetl.utils.validation": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "pandas",
      "typing",
      "typing.Any"
    ],
    "module": "bioetl.utils.validation",
    "path": "src/bioetl/utils/validation.py"
  },
  "library": {
    "imports": [
      "__future__",
      "__future__.annotations"
    ],
    "module": "library",
    "path": "src/library/__init__.py"
  },
  "scripts": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.cli.command",
      "bioetl.cli.command.PipelineCommandConfig",
      "bioetl.cli.command.create_pipeline_command",
      "bioetl.pipelines.activity",
      "bioetl.pipelines.activity.ActivityPipeline",
      "bioetl.pipelines.assay",
      "bioetl.pipelines.assay.AssayPipeline",
      "bioetl.pipelines.document",
      "bioetl.pipelines.document.DocumentPipeline",
      "bioetl.pipelines.target",
      "bioetl.pipelines.target.TargetPipeline",
      "bioetl.pipelines.testitem",
      "bioetl.pipelines.testitem.TestItemPipeline",
      "dataclasses",
      "dataclasses.replace",
      "pathlib",
      "pathlib.Path",
      "typer"
    ],
    "module": "scripts",
    "path": "src/scripts/__init__.py"
  },
  "scripts.fix_markdown": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "pathlib",
      "pathlib.Path",
      "sys"
    ],
    "module": "scripts.fix_markdown",
    "path": "src/scripts/fix_markdown.py"
  },
  "scripts.run_activity": {
    "imports": [
      "scripts",
      "scripts.register_pipeline_command",
      "typer"
    ],
    "module": "scripts.run_activity",
    "path": "src/scripts/run_activity.py"
  },
  "scripts.run_assay": {
    "imports": [
      "scripts",
      "scripts.register_pipeline_command",
      "typer"
    ],
    "module": "scripts.run_assay",
    "path": "src/scripts/run_assay.py"
  },
  "scripts.run_document": {
    "imports": [
      "scripts",
      "scripts.register_pipeline_command",
      "typer"
    ],
    "module": "scripts.run_document",
    "path": "src/scripts/run_document.py"
  },
  "scripts.run_fix_markdown": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "os",
      "pathlib",
      "pathlib.Path",
      "re"
    ],
    "module": "scripts.run_fix_markdown",
    "path": "src/scripts/run_fix_markdown.py"
  },
  "scripts.run_target": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.cli.limits",
      "bioetl.cli.limits.apply_sample_limit",
      "bioetl.config.loader",
      "bioetl.config.loader.load_config",
      "bioetl.config.loader.parse_cli_overrides",
      "bioetl.core.logger",
      "bioetl.core.logger.UnifiedLogger",
      "bioetl.pipelines.base",
      "bioetl.pipelines.base.PipelineBase",
      "bioetl.pipelines.target",
      "bioetl.pipelines.target.TargetPipeline",
      "click",
      "click.core",
      "click.core.ParameterSource",
      "click.get_current_context",
      "collections.abc",
      "collections.abc.Callable",
      "datetime",
      "datetime.datetime",
      "os",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "typer",
      "types",
      "types.MethodType",
      "typing",
      "typing.Any",
      "typing.cast"
    ],
    "module": "scripts.run_target",
    "path": "src/scripts/run_target.py"
  },
  "scripts.run_testitem": {
    "imports": [
      "scripts",
      "scripts.register_pipeline_command",
      "typer"
    ],
    "module": "scripts.run_testitem",
    "path": "src/scripts/run_testitem.py"
  },
  "scripts.validate_columns": {
    "imports": [
      "bioetl.utils.column_validator",
      "bioetl.utils.column_validator.ColumnValidator",
      "pathlib",
      "pathlib.Path",
      "typer"
    ],
    "module": "scripts.validate_columns",
    "path": "src/scripts/validate_columns.py"
  },
  "tests": {
    "imports": [],
    "module": "tests",
    "path": "tests/__init__.py"
  },
  "tests.conftest": {
    "imports": [
      "bioetl.config",
      "bioetl.config.Config",
      "collections.abc",
      "collections.abc.Generator",
      "faker",
      "faker.Faker",
      "os",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "requests",
      "sys",
      "tempfile",
      "types",
      "types.ModuleType",
      "unittest.mock",
      "unittest.mock.Mock"
    ],
    "module": "tests.conftest",
    "path": "tests/conftest.py"
  },
  "tests.golden.test_cli_golden": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.cli.command",
      "bioetl.cli.command.PipelineCommandConfig",
      "bioetl.cli.command.create_pipeline_command",
      "bioetl.config.loader",
      "bioetl.config.loader.load_config",
      "bioetl.core.hashing",
      "bioetl.core.hashing.generate_hash_business_key",
      "bioetl.core.hashing.generate_hash_row",
      "bioetl.pandera_typing",
      "bioetl.pandera_typing.Series",
      "bioetl.pipelines.base",
      "bioetl.pipelines.base.PipelineBase",
      "bioetl.schemas.base",
      "bioetl.schemas.base.BaseSchema",
      "bioetl.schemas.registry",
      "bioetl.schemas.registry.schema_registry",
      "click",
      "click.testing",
      "click.testing.CliRunner",
      "dataclasses",
      "dataclasses.replace",
      "hashlib",
      "json",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "scripts",
      "scripts.PIPELINE_COMMAND_REGISTRY",
      "typer",
      "typer.main",
      "typer.main.get_command"
    ],
    "module": "tests.golden.test_cli_golden",
    "path": "tests/golden/test_cli_golden.py"
  },
  "tests.integration.pipelines": {
    "imports": [],
    "module": "tests.integration.pipelines",
    "path": "tests/integration/pipelines/__init__.py"
  },
  "tests.integration.pipelines.test_activity_pipeline": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.config.loader",
      "bioetl.config.loader.load_config",
      "bioetl.pipelines.activity",
      "bioetl.pipelines.activity.ActivityPipeline",
      "bioetl.schemas",
      "bioetl.schemas.ActivitySchema",
      "bioetl.utils.chembl",
      "bioetl.utils.chembl.ChemblRelease",
      "json",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "pytest"
    ],
    "module": "tests.integration.pipelines.test_activity_pipeline",
    "path": "tests/integration/pipelines/test_activity_pipeline.py"
  },
  "tests.integration.pipelines.test_enrichment_stages": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.pipelines.base",
      "bioetl.pipelines.base.enrichment_stage_registry",
      "bioetl.pipelines.document",
      "bioetl.pipelines.document.DocumentPipeline",
      "bioetl.pipelines.target",
      "bioetl.pipelines.target.TargetPipeline",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys",
      "types"
    ],
    "module": "tests.integration.pipelines.test_enrichment_stages",
    "path": "tests/integration/pipelines/test_enrichment_stages.py"
  },
  "tests.integration.pipelines.test_extended_mode_outputs": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.pipelines.base",
      "bioetl.pipelines.base.PipelineBase",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "types",
      "yaml"
    ],
    "module": "tests.integration.pipelines.test_extended_mode_outputs",
    "path": "tests/integration/pipelines/test_extended_mode_outputs.py"
  },
  "tests.integration.qc.test_unified_qc": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.pipelines.activity",
      "bioetl.pipelines.activity.ActivityPipeline",
      "bioetl.pipelines.base",
      "bioetl.pipelines.base.PipelineBase",
      "bioetl.pipelines.document",
      "bioetl.pipelines.document.DocumentPipeline",
      "bioetl.pipelines.target",
      "bioetl.pipelines.target.TargetPipeline",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys",
      "types"
    ],
    "module": "tests.integration.qc.test_unified_qc",
    "path": "tests/integration/qc/test_unified_qc.py"
  },
  "tests.integration.test_document_pipeline_enrichment": {
    "imports": [
      "bioetl.config.loader",
      "bioetl.config.loader.load_config",
      "bioetl.pipelines.document",
      "bioetl.pipelines.document.DocumentPipeline",
      "bioetl.pipelines.document.ExternalEnrichmentResult",
      "bioetl.pipelines.document._document_run_pubmed_stage",
      "bioetl.schemas",
      "bioetl.schemas.DocumentSchema",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "pytest_httpserver",
      "pytest_httpserver.HTTPServer",
      "requests",
      "tempfile"
    ],
    "module": "tests.integration.test_document_pipeline_enrichment",
    "path": "tests/integration/test_document_pipeline_enrichment.py"
  },
  "tests.perf.test_dataframe_hash": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.core.hashing",
      "bioetl.core.hashing.generate_hash_row",
      "bioetl.utils.dataframe",
      "bioetl.utils.dataframe.finalize_pipeline_output",
      "collections.abc",
      "collections.abc.Iterable",
      "numpy",
      "pandas",
      "pytest"
    ],
    "module": "tests.perf.test_dataframe_hash",
    "path": "tests/perf/test_dataframe_hash.py"
  },
  "tests.perf.test_quality_report_generator": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.core.output_writer",
      "bioetl.core.output_writer.QualityReportGenerator",
      "collections.abc",
      "collections.abc.Callable",
      "numpy",
      "pandas",
      "pandas.testing",
      "pytest",
      "time"
    ],
    "module": "tests.perf.test_quality_report_generator",
    "path": "tests/perf/test_quality_report_generator.py"
  },
  "tests.pipelines": {
    "imports": [],
    "module": "tests.pipelines",
    "path": "tests/pipelines/__init__.py"
  },
  "tests.pipelines.test_materialization_manager": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.config.models",
      "bioetl.config.models.MaterializationPaths",
      "bioetl.core.materialization",
      "bioetl.core.materialization.MaterializationManager",
      "pandas",
      "pytest",
      "types",
      "types.SimpleNamespace",
      "typing",
      "typing.Any"
    ],
    "module": "tests.pipelines.test_materialization_manager",
    "path": "tests/pipelines/test_materialization_manager.py"
  },
  "tests.schemas.test_assay_schema": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.schemas.assay",
      "bioetl.schemas.assay.AssaySchema",
      "pandas"
    ],
    "module": "tests.schemas.test_assay_schema",
    "path": "tests/schemas/test_assay_schema.py"
  },
  "tests.schemas.test_document_raw_schema": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.schemas.document",
      "bioetl.schemas.document.DocumentRawSchema",
      "pandas"
    ],
    "module": "tests.schemas.test_document_raw_schema",
    "path": "tests/schemas/test_document_raw_schema.py"
  },
  "tests.schemas.test_registry": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.schemas.assay",
      "bioetl.schemas.assay.AssaySchema",
      "bioetl.schemas.registry",
      "bioetl.schemas.registry.SchemaRegistry",
      "logging",
      "pytest",
      "re",
      "sys",
      "types"
    ],
    "module": "tests.schemas.test_registry",
    "path": "tests/schemas/test_registry.py"
  },
  "tests.schemas.test_testitem_schema": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.schemas",
      "bioetl.schemas.TestItemSchema"
    ],
    "module": "tests.schemas.test_testitem_schema",
    "path": "tests/schemas/test_testitem_schema.py"
  },
  "tests.test_fixtures_smoke": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "tests",
      "tests.conftest"
    ],
    "module": "tests.test_fixtures_smoke",
    "path": "tests/test_fixtures_smoke.py"
  },
  "tests.unit": {
    "imports": [],
    "module": "tests.unit",
    "path": "tests/unit/__init__.py"
  },
  "tests.unit.adapters": {
    "imports": [],
    "module": "tests.unit.adapters",
    "path": "tests/unit/adapters/__init__.py"
  },
  "tests.unit.adapters._mixins": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.adapters.base",
      "bioetl.adapters.base.AdapterConfig",
      "bioetl.adapters.base.ExternalAdapter",
      "bioetl.core.api_client",
      "bioetl.core.api_client.APIConfig",
      "typing",
      "typing.Any",
      "typing.ClassVar"
    ],
    "module": "tests.unit.adapters._mixins",
    "path": "tests/unit/adapters/_mixins.py"
  },
  "tests.unit.adapters.test_base_adapter": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.adapters.base",
      "bioetl.adapters.base.ExternalAdapter",
      "tests.unit.adapters._mixins",
      "tests.unit.adapters._mixins.AdapterTestMixin",
      "unittest",
      "unittest.mock",
      "unittest.mock.patch"
    ],
    "module": "tests.unit.adapters.test_base_adapter",
    "path": "tests/unit/adapters/test_base_adapter.py"
  },
  "tests.unit.adapters.test_crossref_adapter": {
    "imports": [
      "bioetl.adapters.crossref",
      "bioetl.adapters.crossref.CrossrefAdapter",
      "tests.unit.adapters._mixins",
      "tests.unit.adapters._mixins.AdapterTestMixin",
      "unittest",
      "unittest.mock",
      "unittest.mock.patch"
    ],
    "module": "tests.unit.adapters.test_crossref_adapter",
    "path": "tests/unit/adapters/test_crossref_adapter.py"
  },
  "tests.unit.adapters.test_openalex_adapter": {
    "imports": [
      "bioetl.adapters.openalex",
      "bioetl.adapters.openalex.OpenAlexAdapter",
      "tests.unit.adapters._mixins",
      "tests.unit.adapters._mixins.AdapterTestMixin",
      "unittest",
      "unittest.mock",
      "unittest.mock.patch"
    ],
    "module": "tests.unit.adapters.test_openalex_adapter",
    "path": "tests/unit/adapters/test_openalex_adapter.py"
  },
  "tests.unit.adapters.test_pubchem_adapter": {
    "imports": [
      "bioetl.adapters.pubchem",
      "bioetl.adapters.pubchem.PubChemAdapter",
      "tests.unit.adapters._mixins",
      "tests.unit.adapters._mixins.AdapterTestMixin",
      "unittest",
      "unittest.mock",
      "unittest.mock.patch"
    ],
    "module": "tests.unit.adapters.test_pubchem_adapter",
    "path": "tests/unit/adapters/test_pubchem_adapter.py"
  },
  "tests.unit.adapters.test_pubmed_adapter": {
    "imports": [
      "bioetl.adapters.pubmed",
      "bioetl.adapters.pubmed.PubMedAdapter",
      "tests.unit.adapters._mixins",
      "tests.unit.adapters._mixins.AdapterTestMixin",
      "unittest",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "unittest.mock.patch"
    ],
    "module": "tests.unit.adapters.test_pubmed_adapter",
    "path": "tests/unit/adapters/test_pubmed_adapter.py"
  },
  "tests.unit.adapters.test_semantic_scholar_adapter": {
    "imports": [
      "bioetl.adapters.semantic_scholar",
      "bioetl.adapters.semantic_scholar.SemanticScholarAdapter",
      "pandas",
      "tests.unit.adapters._mixins",
      "tests.unit.adapters._mixins.AdapterTestMixin",
      "unittest",
      "unittest.mock",
      "unittest.mock.patch"
    ],
    "module": "tests.unit.adapters.test_semantic_scholar_adapter",
    "path": "tests/unit/adapters/test_semantic_scholar_adapter.py"
  },
  "tests.unit.config.test_pipeline_config": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.config",
      "bioetl.config.load_config",
      "bioetl.config.models",
      "bioetl.config.models.PipelineConfig",
      "pathlib",
      "pathlib.Path",
      "pytest"
    ],
    "module": "tests.unit.config.test_pipeline_config",
    "path": "tests/unit/config/test_pipeline_config.py"
  },
  "tests.unit.core.test_client_factory": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.config",
      "bioetl.config.PipelineConfig",
      "bioetl.core.client_factory",
      "bioetl.core.client_factory.APIClientFactory",
      "bioetl.core.client_factory.ensure_target_source_config",
      "bioetl.pipelines.activity",
      "bioetl.pipelines.activity.ActivityPipeline",
      "bioetl.pipelines.assay",
      "bioetl.pipelines.assay.AssayPipeline",
      "bioetl.pipelines.document",
      "bioetl.pipelines.document.DocumentPipeline",
      "bioetl.pipelines.testitem",
      "bioetl.pipelines.testitem.TestItemPipeline",
      "importlib",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "typing",
      "typing.Any"
    ],
    "module": "tests.unit.core.test_client_factory",
    "path": "tests/unit/core/test_client_factory.py"
  },
  "tests.unit.docs.test_data_sources_spec": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.config.loader",
      "bioetl.config.loader.load_config",
      "collections.abc",
      "collections.abc.Iterable",
      "collections.abc.Mapping",
      "pathlib",
      "pathlib.Path",
      "pytest"
    ],
    "module": "tests.unit.docs.test_data_sources_spec",
    "path": "tests/unit/docs/test_data_sources_spec.py"
  },
  "tests.unit.normalizers.test_bibliography": {
    "imports": [
      "bioetl.normalizers",
      "bioetl.normalizers.bibliography",
      "bioetl.normalizers.bibliography.normalize_authors",
      "bioetl.normalizers.bibliography.normalize_doi",
      "bioetl.normalizers.bibliography.normalize_title",
      "pytest"
    ],
    "module": "tests.unit.normalizers.test_bibliography",
    "path": "tests/unit/normalizers/test_bibliography.py"
  },
  "tests.unit.normalizers.test_helpers": {
    "imports": [
      "bioetl.normalizers.helpers",
      "bioetl.normalizers.helpers._is_na",
      "bioetl.normalizers.helpers.is_na",
      "math",
      "pytest"
    ],
    "module": "tests.unit.normalizers.test_helpers",
    "path": "tests/unit/normalizers/test_helpers.py"
  },
  "tests.unit.test_api_client": {
    "imports": [
      "bioetl.core.api_client",
      "bioetl.core.api_client.APIConfig",
      "bioetl.core.api_client.CircuitBreaker",
      "bioetl.core.api_client.CircuitBreakerOpenError",
      "bioetl.core.api_client.RetryPolicy",
      "bioetl.core.api_client.TokenBucketLimiter",
      "bioetl.core.api_client.UnifiedAPIClient",
      "collections.abc",
      "collections.abc.Callable",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "datetime.timezone",
      "email.utils",
      "email.utils.format_datetime",
      "json",
      "pytest",
      "requests",
      "requests.structures",
      "requests.structures.CaseInsensitiveDict",
      "time",
      "typing",
      "typing.Any",
      "unittest.mock",
      "unittest.mock.Mock"
    ],
    "module": "tests.unit.test_api_client",
    "path": "tests/unit/test_api_client.py"
  },
  "tests.unit.test_chemistry_normalizers": {
    "imports": [
      "bioetl.normalizers",
      "bioetl.normalizers.chemistry",
      "bioetl.normalizers.chemistry.BaoIdNormalizer",
      "bioetl.normalizers.chemistry.ChemblIdNormalizer",
      "bioetl.normalizers.chemistry.ChemistryRelationNormalizer",
      "bioetl.normalizers.chemistry.ChemistryStringNormalizer",
      "bioetl.normalizers.chemistry.ChemistryUnitsNormalizer",
      "bioetl.normalizers.chemistry.LigandEfficiencyNormalizer",
      "bioetl.normalizers.chemistry.NonNegativeFloatNormalizer",
      "bioetl.normalizers.chemistry.TargetOrganismNormalizer",
      "bioetl.normalizers.registry",
      "math",
      "pytest"
    ],
    "module": "tests.unit.test_chemistry_normalizers",
    "path": "tests/unit/test_chemistry_normalizers.py"
  },
  "tests.unit.test_cli_contract": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.cli.main",
      "bioetl.cli.main.app",
      "bioetl.core.output_writer",
      "bioetl.core.output_writer.OutputArtifacts",
      "bioetl.utils.column_validator",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.replace",
      "importlib",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "scripts",
      "scripts.PIPELINE_COMMAND_REGISTRY",
      "sys",
      "typer.testing",
      "typer.testing.CliRunner",
      "types",
      "types.ModuleType"
    ],
    "module": "tests.unit.test_cli_contract",
    "path": "tests/unit/test_cli_contract.py"
  },
  "tests.unit.test_column_order": {
    "imports": [
      "bioetl.config",
      "bioetl.config.load_config",
      "pathlib",
      "pathlib.Path",
      "yaml"
    ],
    "module": "tests.unit.test_column_order",
    "path": "tests/unit/test_column_order.py"
  },
  "tests.unit.test_column_validator": {
    "imports": [
      "bioetl.utils.column_validator",
      "bioetl.utils.column_validator.ColumnComparisonResult",
      "bioetl.utils.column_validator.ColumnValidator",
      "json",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "pytest"
    ],
    "module": "tests.unit.test_column_validator",
    "path": "tests/unit/test_column_validator.py"
  },
  "tests.unit.test_config_loader": {
    "imports": [
      "bioetl.config",
      "bioetl.config.load_config",
      "bioetl.config.parse_cli_overrides",
      "os",
      "pathlib",
      "pathlib.Path",
      "pydantic",
      "pydantic.ValidationError",
      "pytest",
      "textwrap",
      "textwrap.dedent",
      "textwrap.indent"
    ],
    "module": "tests.unit.test_config_loader",
    "path": "tests/unit/test_config_loader.py"
  },
  "tests.unit.test_document_enrichment": {
    "imports": [
      "bioetl.pipelines.document_enrichment",
      "bioetl.pipelines.document_enrichment.merge_with_precedence",
      "pandas"
    ],
    "module": "tests.unit.test_document_enrichment",
    "path": "tests/unit/test_document_enrichment.py"
  },
  "tests.unit.test_document_pipeline_validation": {
    "imports": [
      "bioetl.config.loader",
      "bioetl.config.loader.load_config",
      "bioetl.pipelines.document",
      "bioetl.pipelines.document.DocumentPipeline",
      "bioetl.schemas.document",
      "bioetl.schemas.document.DocumentNormalizedSchema",
      "bioetl.schemas.document.DocumentRawSchema",
      "bioetl.schemas.document.DocumentSchema",
      "pandas",
      "pandera.errors",
      "pandera.errors.SchemaErrors",
      "pytest",
      "sys",
      "types",
      "types.ModuleType"
    ],
    "module": "tests.unit.test_document_pipeline_validation",
    "path": "tests/unit/test_document_pipeline_validation.py"
  },
  "tests.unit.test_document_schema": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.schemas.document",
      "bioetl.schemas.document.DocumentNormalizedSchema",
      "bioetl.schemas.document.DocumentSchema",
      "pytest"
    ],
    "module": "tests.unit.test_document_schema",
    "path": "tests/unit/test_document_schema.py"
  },
  "tests.unit.test_dtype_utils": {
    "imports": [
      "bioetl.utils.dtype",
      "bioetl.utils.dtype.coerce_nullable_float_columns",
      "bioetl.utils.dtype.coerce_nullable_int_columns",
      "bioetl.utils.dtype.coerce_optional_bool",
      "pandas"
    ],
    "module": "tests.unit.test_dtype_utils",
    "path": "tests/unit/test_dtype_utils.py"
  },
  "tests.unit.test_fallback_utils": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.core",
      "bioetl.core.api_client",
      "bioetl.utils",
      "bioetl.utils.fallback",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "datetime.timezone",
      "email.utils",
      "email.utils.format_datetime",
      "pytest"
    ],
    "module": "tests.unit.test_fallback_utils",
    "path": "tests/unit/test_fallback_utils.py"
  },
  "tests.unit.test_hashing": {
    "imports": [
      "bioetl.core.hashing",
      "bioetl.core.hashing.generate_hash_business_key",
      "bioetl.core.hashing.generate_hash_row",
      "hashlib",
      "json",
      "pandas"
    ],
    "module": "tests.unit.test_hashing",
    "path": "tests/unit/test_hashing.py"
  },
  "tests.unit.test_identifier_normalizer": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.config.loader",
      "bioetl.config.loader.load_config",
      "bioetl.normalizers.identifier",
      "bioetl.normalizers.identifier.IdentifierNormalizer",
      "bioetl.pipelines.document",
      "bioetl.pipelines.document.DocumentPipeline",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys"
    ],
    "module": "tests.unit.test_identifier_normalizer",
    "path": "tests/unit/test_identifier_normalizer.py"
  },
  "tests.unit.test_json_utils": {
    "imports": [
      "bioetl.normalizers.constants",
      "bioetl.normalizers.constants.NA_STRINGS",
      "bioetl.utils.json",
      "bioetl.utils.json.canonical_json",
      "bioetl.utils.json.normalize_json_list",
      "hypothesis",
      "hypothesis.given",
      "hypothesis.strategies",
      "hypothesis.strategies.SearchStrategy",
      "json",
      "math",
      "pytest"
    ],
    "module": "tests.unit.test_json_utils",
    "path": "tests/unit/test_json_utils.py"
  },
  "tests.unit.test_logger": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "datetime",
      "datetime.datetime",
      "datetime.timezone",
      "importlib.util",
      "io",
      "logging",
      "logging.handlers",
      "logging.handlers.RotatingFileHandler",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "structlog",
      "structlog.testing",
      "structlog.testing.capture_logs",
      "sys",
      "types"
    ],
    "module": "tests.unit.test_logger",
    "path": "tests/unit/test_logger.py"
  },
  "tests.unit.test_numeric_normalizer": {
    "imports": [
      "bioetl.normalizers.numeric",
      "bioetl.normalizers.numeric.BooleanNormalizer",
      "bioetl.normalizers.numeric.NumericNormalizer",
      "math"
    ],
    "module": "tests.unit.test_numeric_normalizer",
    "path": "tests/unit/test_numeric_normalizer.py"
  },
  "tests.unit.test_output_writer": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.config.loader",
      "bioetl.config.loader.load_config",
      "bioetl.config.models",
      "bioetl.config.models.DeterminismConfig",
      "bioetl.core.output_writer",
      "bioetl.core.output_writer.AdditionalTableSpec",
      "bioetl.core.output_writer.AtomicWriter",
      "bioetl.core.output_writer.OutputMetadata",
      "bioetl.core.output_writer.UnifiedOutputWriter",
      "bioetl.pandera_typing",
      "bioetl.pandera_typing.Series",
      "bioetl.pipelines.base",
      "bioetl.pipelines.base.PipelineBase",
      "bioetl.schemas.base",
      "bioetl.schemas.base.BaseSchema",
      "bioetl.schemas.registry",
      "bioetl.schemas.registry.schema_registry",
      "datetime",
      "datetime.datetime",
      "datetime.timezone",
      "hashlib",
      "json",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "types",
      "types.SimpleNamespace",
      "yaml"
    ],
    "module": "tests.unit.test_output_writer",
    "path": "tests/unit/test_output_writer.py"
  },
  "tests.unit.test_pipeline_extract_helper": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.config.loader",
      "bioetl.config.loader.load_config",
      "bioetl.config.models",
      "bioetl.config.models.PipelineConfig",
      "bioetl.pipelines",
      "bioetl.pipelines.AssayPipeline",
      "bioetl.pipelines.TargetPipeline",
      "bioetl.pipelines.base",
      "bioetl.pipelines.base.PipelineBase",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "pytest"
    ],
    "module": "tests.unit.test_pipeline_extract_helper",
    "path": "tests/unit/test_pipeline_extract_helper.py"
  },
  "tests.unit.test_pipelines": {
    "imports": [
      "bioetl.config.loader",
      "bioetl.config.loader.load_config",
      "bioetl.core.api_client",
      "bioetl.core.api_client.APIConfig",
      "bioetl.core.api_client.CircuitBreakerOpenError",
      "bioetl.core.api_client.UnifiedAPIClient",
      "bioetl.core.hashing",
      "bioetl.core.hashing.generate_hash_business_key",
      "bioetl.core.output_writer",
      "bioetl.core.output_writer.OutputArtifacts",
      "bioetl.pipelines",
      "bioetl.pipelines.ActivityPipeline",
      "bioetl.pipelines.AssayPipeline",
      "bioetl.pipelines.DocumentPipeline",
      "bioetl.pipelines.TargetPipeline",
      "bioetl.pipelines.TestItemPipeline",
      "bioetl.pipelines.assay",
      "bioetl.pipelines.assay._NULLABLE_INT_COLUMNS",
      "bioetl.pipelines.base",
      "bioetl.pipelines.base.PipelineBase",
      "bioetl.schemas",
      "bioetl.schemas.ActivitySchema",
      "bioetl.schemas.AssaySchema",
      "bioetl.schemas.TargetSchema",
      "bioetl.schemas.TestItemSchema",
      "bioetl.schemas.activity",
      "bioetl.schemas.activity.COLUMN_ORDER",
      "bioetl.utils.validation",
      "bioetl.utils.validation._summarize_schema_errors",
      "json",
      "pandas",
      "pandas.api.types",
      "pandas.api.types.is_float_dtype",
      "pandas.api.types.is_integer_dtype",
      "pandera",
      "pandera.errors",
      "pandera.errors.SchemaErrors",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "requests",
      "typing",
      "typing.Any",
      "unittest.mock",
      "unittest.mock.MagicMock",
      "uuid",
      "yaml"
    ],
    "module": "tests.unit.test_pipelines",
    "path": "tests/unit/test_pipelines.py"
  },
  "tests.unit.test_rate_limiter": {
    "imports": [
      "bioetl.core",
      "bioetl.core.api_client",
      "collections.abc",
      "collections.abc.Callable",
      "pytest",
      "threading",
      "time"
    ],
    "module": "tests.unit.test_rate_limiter",
    "path": "tests/unit/test_rate_limiter.py"
  },
  "tests.unit.test_target_gold": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "importlib.util",
      "pandas",
      "pathlib",
      "pathlib.Path",
      "sys",
      "types"
    ],
    "module": "tests.unit.test_target_gold",
    "path": "tests/unit/test_target_gold.py"
  },
  "tests.unit.test_utils_chembl": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.utils.chembl",
      "bioetl.utils.chembl.ChemblRelease",
      "bioetl.utils.chembl.fetch_chembl_release",
      "collections.abc",
      "collections.abc.Mapping",
      "typing",
      "typing.Any"
    ],
    "module": "tests.unit.test_utils_chembl",
    "path": "tests/unit/test_utils_chembl.py"
  },
  "tests.unit.test_utils_dataframe": {
    "imports": [
      "bioetl.core.hashing",
      "bioetl.core.hashing.generate_hash_business_key",
      "bioetl.pandera_typing",
      "bioetl.pandera_typing.Series",
      "bioetl.schemas",
      "bioetl.schemas.TargetSchema",
      "bioetl.schemas.base",
      "bioetl.schemas.base.BaseSchema",
      "bioetl.utils",
      "bioetl.utils.finalize_pipeline_output",
      "bioetl.utils.resolve_schema_column_order",
      "pandas",
      "pandera.pandas"
    ],
    "module": "tests.unit.test_utils_dataframe",
    "path": "tests/unit/test_utils_dataframe.py"
  },
  "tests.unit.test_utils_dtypes": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.utils.dtypes",
      "bioetl.utils.dtypes.coerce_nullable_int",
      "bioetl.utils.dtypes.coerce_retry_after",
      "pandas",
      "pytest"
    ],
    "module": "tests.unit.test_utils_dtypes",
    "path": "tests/unit/test_utils_dtypes.py"
  },
  "tests.unit.test_utils_io": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl.config",
      "bioetl.config.PipelineConfig",
      "bioetl.utils.io",
      "bioetl.utils.io.load_input_frame",
      "pandas",
      "pathlib",
      "pathlib.Path"
    ],
    "module": "tests.unit.test_utils_io",
    "path": "tests/unit/test_utils_io.py"
  },
  "tests.unit.test_utils_output": {
    "imports": [
      "bioetl.utils.output",
      "bioetl.utils.output.finalize_output_dataset",
      "pandas"
    ],
    "module": "tests.unit.test_utils_output",
    "path": "tests/unit/test_utils_output.py"
  },
  "tests.unit.validation.test_schema_validation": {
    "imports": [
      "__future__",
      "__future__.annotations",
      "bioetl",
      "importlib",
      "importlib.import_module",
      "pandas",
      "pandera",
      "pandera.errors",
      "pandera.errors.SchemaErrors",
      "pathlib",
      "pathlib.Path",
      "pytest",
      "sys",
      "types"
    ],
    "module": "tests.unit.validation.test_schema_validation",
    "path": "tests/unit/validation/test_schema_validation.py"
  }
}
