#!/usr/bin/env python3
"""–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è API –∫–ª—é—á–∞ PubMed.

PubMed E-utilities –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç API –∫–ª—é—á–∏ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤.
–ë–µ–∑ –∫–ª—é—á–∞: 3 –∑–∞–ø—Ä–æ—Å–∞ –≤ —Å–µ–∫—É–Ω–¥—É
–° –∫–ª—é—á–æ–º: 10 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É

–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é –∫–ª—é—á–∞:
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://ncbiinsights.ncbi.nlm.nih.gov/2017/11/02/new-api-keys-for-the-e-utilities/
2. –°–æ–∑–¥–∞–π—Ç–µ —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å My NCBI
3. –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è PUBMED_API_KEY

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –∫–ª—é—á–∞.
"""

import os
import requests
import sys
import time
from typing import Optional


def check_api_key_status(api_key: Optional[str] = None) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å API –∫–ª—é—á–∞ PubMed."""
    
    if not api_key:
        api_key = os.environ.get('PUBMED_API_KEY')
    
    if not api_key:
        print("‚ùå API –∫–ª—é—á PubMed –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è PUBMED_API_KEY")
        return False
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ E-utilities
    params = {
        'db': 'pubmed',
        'id': '7154002',  # –¢–µ—Å—Ç–æ–≤—ã–π PMID
        'retmode': 'json',
        'api_key': api_key
    }
    
    headers = {
        'User-Agent': 'bioactivity-data-acquisition/0.1.0',
        'Accept': 'application/json'
    }
    
    try:
        response = requests.get(
            'https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi',
            params=params,
            headers=headers,
            timeout=30
        )
        
        if response.status_code == 200:
            print("‚úÖ API –∫–ª—é—á PubMed —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ—Ç–≤–µ—Ç–∞
            try:
                data = response.json()
                if 'result' in data:
                    print("‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ PubMed")
                else:
                    print("‚ö†Ô∏è –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω, –Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è")
            except ValueError:
                print("‚ö†Ô∏è –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω, –Ω–æ –Ω–µ –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ")
                
            return True
            
        elif response.status_code == 429:
            print("‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤")
            print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–∏–º–∏—Ç–∞—Ö
            if 'limit' in response.text and 'count' in response.text:
                print("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–∏–º–∏—Ç–∞—Ö:")
                print(response.text)
            
            return False
            
        elif response.status_code == 403:
            print("‚ùå API –∫–ª—é—á –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –Ω–µ–≤–µ—Ä–µ–Ω")
            return False
            
        else:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API –∫–ª—é—á–∞: {e}")
        return False


def test_rate_limits(api_key: str) -> None:
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–∏–º–∏—Ç—ã API —Å –∫–ª—é—á–æ–º –∏ –±–µ–∑."""
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤ API...")
    
    # –¢–µ—Å—Ç –±–µ–∑ –∫–ª—é—á–∞
    print("–¢–µ—Å—Ç –±–µ–∑ API –∫–ª—é—á–∞:")
    for i in range(4):  # –ü–æ–ø—ã—Ç–∞–µ–º—Å—è —Å–¥–µ–ª–∞—Ç—å 4 –∑–∞–ø—Ä–æ—Å–∞
        params = {
            'db': 'pubmed',
            'id': '7154002',
            'retmode': 'json'
        }
        
        try:
            response = requests.get(
                'https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi',
                params=params,
                headers={'User-Agent': 'bioactivity-data-acquisition/0.1.0'},
                timeout=10
            )
            
            if response.status_code == 200:
                print(f"  –ó–∞–ø—Ä–æ—Å {i+1}: ‚úÖ OK")
            elif response.status_code == 429:
                print(f"  –ó–∞–ø—Ä–æ—Å {i+1}: ‚ùå Rate limited")
                break
            else:
                print(f"  –ó–∞–ø—Ä–æ—Å {i+1}: ‚ö†Ô∏è –°—Ç–∞—Ç—É—Å {response.status_code}")
            
            time.sleep(1)  # –ñ–¥–µ–º 1 —Å–µ–∫—É–Ω–¥—É –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            
        except Exception as e:
            print(f"  –ó–∞–ø—Ä–æ—Å {i+1}: ‚ùå –û—à–∏–±–∫–∞: {e}")
            break
    
    time.sleep(2)  # –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–æ–º —Å –∫–ª—é—á–æ–º
    
    # –¢–µ—Å—Ç —Å –∫–ª—é—á–æ–º
    print("\n–¢–µ—Å—Ç —Å API –∫–ª—é—á–æ–º:")
    for i in range(4):  # –ü–æ–ø—ã—Ç–∞–µ–º—Å—è —Å–¥–µ–ª–∞—Ç—å 4 –∑–∞–ø—Ä–æ—Å–∞
        params = {
            'db': 'pubmed',
            'id': '7154002',
            'retmode': 'json',
            'api_key': api_key
        }
        
        try:
            response = requests.get(
                'https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi',
                params=params,
                headers={'User-Agent': 'bioactivity-data-acquisition/0.1.0'},
                timeout=10
            )
            
            if response.status_code == 200:
                print(f"  –ó–∞–ø—Ä–æ—Å {i+1}: ‚úÖ OK")
            elif response.status_code == 429:
                print(f"  –ó–∞–ø—Ä–æ—Å {i+1}: ‚ùå Rate limited")
                break
            else:
                print(f"  –ó–∞–ø—Ä–æ—Å {i+1}: ‚ö†Ô∏è –°—Ç–∞—Ç—É—Å {response.status_code}")
            
            time.sleep(0.1)  # –ñ–¥–µ–º 0.1 —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            
        except Exception as e:
            print(f"  –ó–∞–ø—Ä–æ—Å {i+1}: ‚ùå –û—à–∏–±–∫–∞: {e}")
            break


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞ PubMed")
    print("=" * 50)
    
    api_key = os.environ.get('PUBMED_API_KEY')
    
    if api_key:
        print(f"–ù–∞–π–¥–µ–Ω API –∫–ª—é—á: {api_key[:10]}...")
    else:
        print("API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    
    print("\n–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é API –∫–ª—é—á–∞:")
    print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://www.ncbi.nlm.nih.gov/account/")
    print("2. –°–æ–∑–¥–∞–π—Ç–µ —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å My NCBI (–µ—Å–ª–∏ –Ω–µ—Ç)")
    print("3. –í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç")
    print("4. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Settings ‚Üí API Key Management")
    print("5. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π API –∫–ª—é—á")
    print("6. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    print("   export PUBMED_API_KEY=your_key_here")
    print("   # –∏–ª–∏ –≤ Windows:")
    print("   set PUBMED_API_KEY=your_key_here")
    
    if api_key:
        print("\n–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á...")
        if check_api_key_status(api_key):
            print("\nüéâ API –∫–ª—é—á –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
            print("–û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é, –¥–æ–±–∞–≤–∏–≤ –∫–ª—é—á –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∏:")
            print("pubmed:")
            print("  http:")
            print("    headers:")
            print("      api_key: '{PUBMED_API_KEY}'")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–∏–º–∏—Ç—ã
            test_rate_limits(api_key)
        else:
            print("\n‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å API –∫–ª—é—á–æ–º")
            sys.exit(1)
    else:
        print("\nüí° –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É")
        sys.exit(0)


if __name__ == "__main__":
    main()
