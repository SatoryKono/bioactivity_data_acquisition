diff --git a/src/bioetl/pipelines/base.py b/src/bioetl/pipelines/base.py
index fff7b11..2dc6101 100644
--- a/src/bioetl/pipelines/base.py
+++ b/src/bioetl/pipelines/base.py
@@ -46,13 +46,13 @@ class ChemblClientContext:
     base_url: str
 
 
-def create_chembl_client(
+def _build_chembl_client_context(
     config: PipelineConfig,
     *,
     defaults: Mapping[str, Any] | None = None,
     batch_size_cap: int | None = None,
 ) -> ChemblClientContext:
-    """Construct a ``UnifiedAPIClient`` for the ChEMBL source with shared defaults."""
+    """Create a :class:`ChemblClientContext` for the provided configuration."""
 
     resolved_defaults: dict[str, Any] = {
         "enabled": True,
@@ -91,6 +91,21 @@ def create_chembl_client(
     )
 
 
+def create_chembl_client(
+    config: PipelineConfig,
+    *,
+    defaults: Mapping[str, Any] | None = None,
+    batch_size_cap: int | None = None,
+) -> ChemblClientContext:
+    """Construct a ``UnifiedAPIClient`` for the ChEMBL source with shared defaults."""
+
+    return _build_chembl_client_context(
+        config,
+        defaults=defaults,
+        batch_size_cap=batch_size_cap,
+    )
+
+
 @dataclass(frozen=True)
 class EnrichmentStage:
     """Definition of an enrichment stage executed during transformation."""
@@ -168,6 +183,20 @@ class PipelineBase(ABC):
 
     _SEVERITY_LEVELS: dict[str, int] = {"info": 0, "warning": 1, "error": 2, "critical": 3}
 
+    def _init_chembl_client(
+        self,
+        *,
+        defaults: Mapping[str, Any] | None = None,
+        batch_size_cap: int | None = None,
+    ) -> ChemblClientContext:
+        """Return a configured ChEMBL client context for the pipeline instance."""
+
+        return _build_chembl_client_context(
+            self.config,
+            defaults=defaults,
+            batch_size_cap=batch_size_cap,
+        )
+
     def record_validation_issue(self, issue: dict[str, Any]) -> None:
         """Store a validation issue for later QC reporting."""
 
