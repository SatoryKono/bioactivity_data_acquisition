"""Stub for structlog.stdlib module."""

from __future__ import annotations

from typing import Any

__all__ = ["BoundLogger", "LoggerFactory", "add_logger_name", "add_log_level"]

def add_logger_name(logger: Any, method_name: str, event_dict: dict[str, Any]) -> dict[str, Any]: ...
def add_log_level(logger: Any, method_name: str, event_dict: dict[str, Any]) -> dict[str, Any]: ...

class BoundLogger:
    def info(self, event: str, *args: Any, **kwargs: Any) -> None: ...
    def error(self, event: str, *args: Any, **kwargs: Any) -> None: ...
    def warning(self, event: str, *args: Any, **kwargs: Any) -> None: ...
    def debug(self, event: str, *args: Any, **kwargs: Any) -> None: ...
    def exception(self, event: str, *args: Any, **kwargs: Any) -> None: ...
    def bind(self, **kwargs: Any) -> BoundLogger: ...

class LoggerFactory:
    def __call__(self, *args: Any, **kwargs: Any) -> Any: ...
